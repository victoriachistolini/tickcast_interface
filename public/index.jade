.row
  .col-md-9
    ul.nav.nav-tabs
      li.active(role='presentation')
        a(href='#') Deer Tick Forecast
      
      li.dropdown
        a.dropdown-toggle(href='#', data-toggle='dropdown', role='button', aria-haspopup='true', aria-expanded='false')
          | Report 
          span.caret
        ul.dropdown-menu
          li
            a(href='https://report.bigelow.org/tick/', target='_blank') Ticks
          li.divider(role='separator')
          li
            a(href='https://jellyfish.bigelow.org/jellyfish/', target='_blank') Jellyfish
        
        li(role='presentation')
            a(href='/podcast.html') Weekly Podcast
      
        li.dropdown
          a.dropdown-toggle(href='#', data-toggle='dropdown', role='button', aria-haspopup='true', aria-expanded='false')
            | Other Species 
            span.caret
          ul.dropdown-menu
            li
              a(href='/jelly.html') Jellyfish 
            
        li(role='presentation')
            a(href='/news.html') News
     
    #map
    br
    br      
    
  .col-md-3
    br
    br 
    .panel.panel-default
      .panel-heading
        h3.panel-title Map Layers
      .panel-body          
        input.messageCheckbox(type='checkbox', name='layers', value='1', checked, onclick='toggleForcast(this);')#cast
        label(for='cast')  Forecast 
        hr
        input.messageCheckbox(type='checkbox', name='layers', value='2',onclick='showDeerTicks(this);')#deer
        label(for='love')  Deer Tick Observations 
        hr
        
        input.messageCheckbox(type='checkbox', name='layers', value='3', onclick='showDogTicks(this);')#dog
        label(for='love')  Dog Tick Observations 
        br   
    br
    br          
    .panel.panel-default
      .panel-heading
        h3.panel-title Forecast Control Panel
      .panel-body#body
         #forecast
          .row
            .col-md-7
              p Play Forecast:
              br
              .slider
                input(type='range', name='points', min='0', max='3',value='0')#slider 
              br
            .col-md-5
              p Date:
              br
              p#date 07-09-2017
          p Likelihood of Tick Encounter:
          img(src="/images/colorbars/rainbow.png", width="100%")#colorstrip
          .pull-right High
          div Low
          br
          p Change Forecast Color Scheme:
          select(onchange='changeColor(this.value)')
            option(value='1') Default
            option(value='2') Yellows
            option(value='3') Rainbow
         #deerTick
          br
          p Deer Tick Key:
          br
          .row
           .col-md-5
            #greenIcon
            br
            #pinkIcon
           .col-md-7
            div Male Deer Tick
            br
            div Female Deer Tick
         #dogTick
          br
          p Dog Tick Key:
          br
          .row
           .col-md-5
            #blueIcon
            br
            #purpleIcon
           .col-md-7
            div Male Dog Tick
            br
            div Female Dog Tick
           

style.
  
  body {
    margin-left: 50px;
    margin-right: 50px;
  }
  
  #map {
    height: 120vh;
    width: 100%;
  }
  

  
  .basic-box{
    width: 30px;
    height: 50px;
    float: left;
  }

  #blueIcon {
  width: 60px;
  height: 20px;
  background-color:#0000FF; 
  }
  
  #greenIcon {
  width: 60px;
  height: 20px;
  background-color:#008000; 
  } 
  
  #pinkIcon {
  width: 60px;
  height: 20px;
  background-color:#FE7569; 
  } 
  
  #purpleIcon {
  width: 60px;
  height: 20px;
  background-color:#9370DB; 
  }
    
script(src='https://maps.googleapis.com/maps/api/js?key=AIzaSyBQgilx3e3-f0pgRfx-GCnNgzWllJlMhSs')
script.

  var threedaysago = (3).days().ago().toString("MM-dd-yyyy");
  var twodaysago = (2).days().ago().toString("MM-dd-yyyy");
  var yesterday = (1).days().ago().toString("MM-dd-yyyy");
  var today = new Date.today().toString("MM-dd-yyyy");
  var tomorrow = new Date.today().addDays(1).toString("MM-dd-yyyy");
  var twodaysfromnow = new Date.today().addDays(2).toString("MM-dd-yyyy");
  var threedaysfromnow = new Date.today().addDays(3).toString("MM-dd-yyyy");
  var todayPath = "https://static.bigelow.org/data/ecocast/tick/"+today+".png";
  var tomorrowPath = "https://static.bigelow.org/data/ecocast/tick/"+tomorrow+".png";
  var twodaysfromnowPath = "https://static.bigelow.org/data/ecocast/tick/"+twodaysfromnow+".png";
  var threedaysfromnowPath = "https://static.bigelow.org/data/ecocast/tick/"+threedaysfromnow+".png";
  
  $('#deerTick').hide();
  $('#dogTick').hide();

  
  

  // animate forcast
  var overlay;
  var map;
  forcastOverlay.prototype = new google.maps.OverlayView();
  var deerTicks=[];
  var dogTicks=[];
  var male_dog = createNewIcon("0000FF");
  var male_deer = createNewIcon("008000");
  var female_deer = createNewIcon("FE7569");
  var female_dog = createNewIcon("9370DB");
  
  
  
  function initMap() {
    
    map = new google.maps.Map(document.getElementById('map'), {
      zoom: 7,
      center: {lat: 44.8012, lng: -68.7778},
    });
    
    var bounds = new google.maps.LatLngBounds(
      new google.maps.LatLng(40.9470950033508, -73.9987308620128),
      new google.maps.LatLng(48.1221341816001, -59.6983306401886));
      
      var srcImage = todayPath;
      document.getElementById("date").innerHTML = today;
      overlay = new forcastOverlay(srcImage,bounds);
      
      //load JSON object 
      var dataset=$.ajax({
        url:"/data/cleaned.json",
        dataType: 'json'    
        })
       .done(function( data ) {
           for (var i = 0; i < data.length; i++) { 
             loadData(data[i])
           }
       });
      
    }
    
    /** @constructor */
    function forcastOverlay( image,bounds) {
      // Now initialize all properties.
      this.bounds_ = bounds;
      this.image_ = image;
      this.div_ = null;
      this.setMap(map);
    }
    
    /**
    * onAdd is called when the map's panes are ready and the overlay has been
    * added to the map.
    */
    forcastOverlay.prototype.onAdd = function() {
      var div = document.createElement('div');
      div.style.border = 'none';
      div.style.borderWidth = '0px';
      div.style.position = 'absolute';
      // Create the img element and attach it to the div.
      var img = document.createElement('img');
      img.src = this.image_;
      img.style.width = '100%';
      img.style.height = '100%';
      img.style.opacity = 0.5;
      div.appendChild(img);
      this.div_ = div;
      // Add the element to the "overlayImage" pane.
      var panes = this.getPanes();
      panes.overlayLayer.appendChild(this.div_);
    };
    
    
    forcastOverlay.prototype.draw = function() {
      // We use the south-west and north-east
      // coordinates of the overlay to peg it to the correct position and size.
      // To do this, we need to retrieve the projection from the overlay.
      var overlayProjection = this.getProjection();
      // Retrieve the south-west and north-east coordinates of this overlay
      // in LatLngs and convert them to pixel coordinates.
      // We'll use these coordinates to resize the div.
      var sw = overlayProjection.fromLatLngToDivPixel(this.bounds_.getSouthWest());
      var ne = overlayProjection.fromLatLngToDivPixel(this.bounds_.getNorthEast());
      // Resize the image's div to fit the indicated dimensions.
      var div = this.div_;
      div.style.left = sw.x + 'px';
      div.style.top = ne.y + 'px';
      div.style.width = (ne.x - sw.x) + 'px';
      div.style.height = (sw.y - ne.y) + 'px';
    };
    
  
    forcastOverlay.prototype.changeImage = function(new_url) {
      this.div_.getElementsByTagName('img')[0].src= new_url;
    };
    
    
    
    // Set the visibility to 'hidden' or 'visible'.
    forcastOverlay.prototype.hide = function() {
      if (this.div_) {
        // The visibility property must be a string enclosed in quotes.
        this.div_.style.visibility = 'hidden';
      }
    };

    forcastOverlay.prototype.show = function() {
      if (this.div_) {
        this.div_.style.visibility = 'visible';
      }
    };

    forcastOverlay.prototype.toggle = function() {
      if (this.div_) {
        if (this.div_.style.visibility === 'hidden') {
          this.show();
        } else {
          this.hide();
        }
      }
    };

  


  $('#slider').mousemove(function() {
    var theValue = $('#slider').val();

    if (theValue == 0){
  
      overlay.changeImage(todayPath);
      document.getElementById("date").innerHTML = today;
  
    } else if (theValue ==1){
  
     overlay.changeImage(tomorrowPath); 
     document.getElementById("date").innerHTML = tomorrow;
      
  
    } else if(theValue == 2){
  
       overlay.changeImage(twodaysfromnowPath);
       document.getElementById("date").innerHTML = twodaysfromnow;       
    } else if (theValue == 3){
  
       overlay.changeImage(threedaysfromnowPath);
       document.getElementById("date").innerHTML = threedaysfromnow;      
    }

  }); 
  
  
  function toggleForcast(cb) {
    if (cb.checked){
      overlay.toggle();
            
    }
    else{
      overlay.toggle();
    }
    formatControlPanel();
  }

  function createNewIcon(color){
    var icon = new google.maps.MarkerImage(
              "http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|" + color,
               new google.maps.Size(21, 34),
               new google.maps.Point(0,0),
               new google.maps.Point(10, 34)
              );
    
              return icon;
  }  


  //load one JSON object
  function loadData(data){
       var LatLng = {lat: data.Lat, lng: data.Lon};
      //determine marker color based on tick sex
      if (data.Species === 1){
       
       var marker = new google.maps.Marker({
                  position: LatLng,
                  map: null,
          icon: female_deer
        });
        
        deerTicks.push(marker);
      } else if (data.Species === 2){
        var marker = new google.maps.Marker({
                  position: LatLng,
                  map: null,
          icon: male_deer
        });
        deerTicks.push(marker);
        
      } else if (data.Species === 4){
        var marker = new google.maps.Marker({
                  position: LatLng,
                  map: null,
          icon: female_dog
         });
         dogTicks.push(marker);
      } else{
       var marker = new google.maps.Marker({
                  position: LatLng,
                  map: null,
          icon: male_dog
         });
         dogTicks.push(marker)
         
      }       
  }
  
  function setMapOnAll() {
    for (var i = 0; i < dogTicks.length; i++) {
      dogTicks[i].setMap(map);
    }
    
    for (var i = 0; i < deerTicks.length; i++) {
      deerTicks[i].setMap(map);
    }
    
  }
  
  function hideAllMarkers() {
   
    
    for (var i = 0; i < deerTicks.length; i++) {
      deerTicks[i].setMap(null);
    }
    for (var i = 0; i < dogTicks.length; i++) {
      dogTicks[i].setMap(null);
    }
    
  }
  
  function showDeerTicks(cb) {
    if(cb.checked){
      for (var i = 0; i < deerTicks.length; i++) {
        deerTicks[i].setMap(map);
      }
    }
    else {
      for (var i = 0; i < deerTicks.length; i++) {
        deerTicks[i].setMap(null);
      }
      
    }
    
    formatControlPanel();
    
  }
  
  function showDogTicks(cb) {
    if (cb.checked){
      for (var i = 0; i < dogTicks.length; i++) {
        dogTicks[i].setMap(map);
      }
    }
    else {
      for (var i = 0; i < dogTicks.length; i++) {
        dogTicks[i].setMap(null);
      }
    }
    formatControlPanel();
  }
  
  function formatControlPanel(){
    
    var castBox = document.getElementById('cast');
    var dogBox = document.getElementById('dog');
    var deerBox = document.getElementById('deer');
    
    if(castBox.checked){
      $('#forecast').show();
      }
    else{
      $('#forecast').hide();
      }
    if(dogBox.checked){
     $('#dogTick').show();
    }
    else{
      $('#dogTick').hide();
    }
    
    if(deerBox.checked){
      $('#deerTick').show(); 
    }
    else {
      $('#deerTick').hide();
    }
    
  }
  
  
  function changeGlobalPaths(extension){
    todayPath = "https://static.bigelow.org/data/ecocast/tick/"+today+extension;
    tomorrowPath = "https://static.bigelow.org/data/ecocast/tick/"+tomorrow+extension;
    twodaysfromnowPath = "https://static.bigelow.org/data/ecocast/tick/"+twodaysfromnow+extension;
    threedaysfromnowPath = "https://static.bigelow.org/data/ecocast/tick/"+threedaysfromnow+extension;
  }
  
  function changeGlobalPaths2(extension){
    todayPath = "https://static.bigelow.org/data/ecocast/forecast/"+today+extension;
    tomorrowPath = "https://static.bigelow.org/data/ecocast/forecast/"+tomorrow+extension;
    twodaysfromnowPath = "https://static.bigelow.org/data/ecocast/forecast/"+twodaysfromnow+extension;
    threedaysfromnowPath = "https://static.bigelow.org/data/ecocast/forecast/"+threedaysfromnow+extension;
  }
  
  
  
  
  function changeColor(value){
    console.log(value);
    var date = document.getElementById('date').innerHTML;
    
    if(value==1){
      overlay.changeImage("https://static.bigelow.org/data/ecocast/forecast/"+date+"_4.png");
      changeGlobalPaths2("_4.png");
      $("#colorstrip").attr('src','/images/colorbars/oranges.png');
    }
    else if(value==2){
      overlay.changeImage("https://static.bigelow.org/data/ecocast/forecast/"+date+"_2.png");
      changeGlobalPaths2("_2.png");
      $("#colorstrip").attr('src','/images/colorbars/yellows.png'); 
    }
    else if(value==3){
      changeGlobalPaths(".png");
      overlay.changeImage("https://static.bigelow.org/data/ecocast/tick/"+date+".png");
      $("#colorstrip").attr('src','/images/colorbars/rainbow.png'); 
    }
    
  }
  
  
  google.maps.event.addDomListener(window, 'load', initMap);


