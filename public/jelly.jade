.row
  .col-md-9
    ul.nav.nav-tabs
      li.active(role='presentation')
        a(href='#') Jellyfish Forecast
      
      li.dropdown
        a.dropdown-toggle(href='#', data-toggle='dropdown', role='button', aria-haspopup='true', aria-expanded='false')
          | Report 
          span.caret
        ul.dropdown-menu
          li
            a(href='https://report.bigelow.org/tick/', target='_blank') Ticks
          li.divider(role='separator')
          li
            a(href='https://jellyfish.bigelow.org/jellyfish/', target='_blank') Jellyfish
        
        li(role='presentation')
            a(href='/podcast.html') Weekly Podcast
      
        li.dropdown
          a.dropdown-toggle(href='#', data-toggle='dropdown', role='button', aria-haspopup='true', aria-expanded='false')
            | Other Species 
            span.caret
          ul.dropdown-menu
            li
              a(href='/index.html') Deer Tick Forecast
             
            
        li(role='presentation')
            a(href='/news.html') News
     
    #map
    br
    br      
    
  .col-md-3
    br
    br 
    .panel.panel-default
      .panel-heading
        h3.panel-title Map Layers
      .panel-body          
        input.messageCheckbox(type='checkbox', name='layers', value='1', checked, onclick='toggleForcast(this);')#cast
        label(for='cast')  Forecast 
        
    br
    br          
    .panel.panel-default
      .panel-heading
        h3.panel-title Forecast Control Panel
      .panel-body#body
         #forecast
          .row
            .col-md-7
              p Forecast Date:
              br
            .col-md-5
              p#date 07-09-2017
              br
          p Likelihood of Tick Encounter:
          img(src="/images/colorbars/yellows.png", width="100%")#colorstrip
          .pull-right High
          div Low
          br
           
style.
  
  body {
    margin-left: 50px;
    margin-right: 50px;
  }
  
  #map {
    height: 90vh;
    width: 100%;
  }
  

  
  .basic-box{
    width: 30px;
    height: 50px;
    float: left;
  }

  #blueIcon {
  width: 60px;
  height: 20px;
  background-color:#0000FF; 
  }
  
  #greenIcon {
  width: 60px;
  height: 20px;
  background-color:#008000; 
  } 
  
  #pinkIcon {
  width: 60px;
  height: 20px;
  background-color:#FE7569; 
  } 
  
  #purpleIcon {
  width: 60px;
  height: 20px;
  background-color:#9370DB; 
  }
    
script(src='https://maps.googleapis.com/maps/api/js?key=AIzaSyBQgilx3e3-f0pgRfx-GCnNgzWllJlMhSs')
script.

  var threedaysago = (3).days().ago().toString("MM-dd-yyyy");
  var twodaysago = (2).days().ago().toString("MM-dd-yyyy");
  var yesterday = (1).days().ago().toString("MM-dd-yyyy");
  var today = new Date.today().toString("MM-dd-yyyy");
  var tomorrow = new Date.today().addDays(1).toString("MM-dd-yyyy");
  var twodaysfromnow = new Date.today().addDays(2).toString("MM-dd-yyyy");
  var threedaysfromnow = new Date.today().addDays(3).toString("MM-dd-yyyy");
  var todayPath = "https://static.bigelow.org/data/ecocast/jelly/"+today+".png";
  var tomorrowPath = "https://static.bigelow.org/data/ecocast/jelly/"+tomorrow+".png";
  var twodaysfromnowPath = "https://static.bigelow.org/data/ecocast/jelly/"+twodaysfromnow+".png";
  var threedaysfromnowPath = "https://static.bigelow.org/data/ecocast/jelly/"+threedaysfromnow+".png";
  
  // animate forcast
  var overlay;
  var map;
  forcastOverlay.prototype = new google.maps.OverlayView();

    
  function initMap() {
    
    map = new google.maps.Map(document.getElementById('map'), {
      zoom: 7,
      center: {lat: 44.8012, lng: -68.7778},
    });
    
    var bounds = new google.maps.LatLngBounds(
      new google.maps.LatLng(40.9966452004322, -73.9950023977877),
      new google.maps.LatLng(48.150451765812, -59.7450014418008));
      
      var srcImage = "https://static.bigelow.org/data/ecocast/jellyfish/2017-07-31.png";
      document.getElementById("date").innerHTML = today;
      overlay = new forcastOverlay(srcImage,bounds);
      
    }
    
    /** @constructor */
    function forcastOverlay( image,bounds) {
      // Now initialize all properties.
      this.bounds_ = bounds;
      this.image_ = image;
      this.div_ = null;
      this.setMap(map);
    }
    
    /**
    * onAdd is called when the map's panes are ready and the overlay has been
    * added to the map.
    */
    forcastOverlay.prototype.onAdd = function() {
      var div = document.createElement('div');
      div.style.border = 'none';
      div.style.borderWidth = '0px';
      div.style.position = 'absolute';
      // Create the img element and attach it to the div.
      var img = document.createElement('img');
      img.src = this.image_;
      img.style.width = '100%';
      img.style.height = '100%';
      img.style.opacity = 0.5;
      div.appendChild(img);
      this.div_ = div;
      // Add the element to the "overlayImage" pane.
      var panes = this.getPanes();
      panes.overlayLayer.appendChild(this.div_);
    };
    
    
    forcastOverlay.prototype.draw = function() {
      // We use the south-west and north-east
      // coordinates of the overlay to peg it to the correct position and size.
      // To do this, we need to retrieve the projection from the overlay.
      var overlayProjection = this.getProjection();
      // Retrieve the south-west and north-east coordinates of this overlay
      // in LatLngs and convert them to pixel coordinates.
      // We'll use these coordinates to resize the div.
      var sw = overlayProjection.fromLatLngToDivPixel(this.bounds_.getSouthWest());
      var ne = overlayProjection.fromLatLngToDivPixel(this.bounds_.getNorthEast());
      // Resize the image's div to fit the indicated dimensions.
      var div = this.div_;
      div.style.left = sw.x + 'px';
      div.style.top = ne.y + 'px';
      div.style.width = (ne.x - sw.x) + 'px';
      div.style.height = (sw.y - ne.y) + 'px';
    };
    
  
    forcastOverlay.prototype.changeImage = function(new_url) {
      this.div_.getElementsByTagName('img')[0].src= new_url;
    };
    
    
    
    // Set the visibility to 'hidden' or 'visible'.
    forcastOverlay.prototype.hide = function() {
      if (this.div_) {
        // The visibility property must be a string enclosed in quotes.
        this.div_.style.visibility = 'hidden';
      }
    };

    forcastOverlay.prototype.show = function() {
      if (this.div_) {
        this.div_.style.visibility = 'visible';
      }
    };

    forcastOverlay.prototype.toggle = function() {
      if (this.div_) {
        if (this.div_.style.visibility === 'hidden') {
          this.show();
        } else {
          this.hide();
        }
      }
    };

  


  $('#slider').mousemove(function() {
    var theValue = $('#slider').val();

    if (theValue == 0){
  
      overlay.changeImage(todayPath);
      document.getElementById("date").innerHTML = today;
  
    } else if (theValue ==1){
  
     overlay.changeImage(tomorrowPath); 
     document.getElementById("date").innerHTML = tomorrow;
      
  
    } else if(theValue == 2){
  
       overlay.changeImage(twodaysfromnowPath);
       document.getElementById("date").innerHTML = twodaysfromnow;       
    } else if (theValue == 3){
  
       overlay.changeImage(threedaysfromnowPath);
       document.getElementById("date").innerHTML = threedaysfromnow;      
    }

  }); 
  
  
  function toggleForcast(cb) {
    if (cb.checked){
      overlay.toggle();
            
    }
    else{
      overlay.toggle();
    }
    formatControlPanel();
  }

  
  function formatControlPanel(){
    
    var castBox = document.getElementById('cast');
   
    if(castBox.checked){
      $('#forecast').show();
      }
    else{
      $('#forecast').hide();
      }
    
  }
  
  
  google.maps.event.addDomListener(window, 'load', initMap);



